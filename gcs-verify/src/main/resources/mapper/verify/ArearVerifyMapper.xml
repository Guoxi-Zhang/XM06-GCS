<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gcs.verify.mapper.ArearVerifyMapper">

    <resultMap type="ArearVerify" id="ArearVerify">
        <result property="tableId"    column="table_id"    />
        <result property="studentId"    column="user_id"    />
        <result property="batchId"    column="batch_id"    />
        <result property="arearId"    column="arrear_id"    />
        <result property="arearAmount"    column="arrear_amount"    />
        <result property="arearReason"    column="arrear_reason"    />
        <result property="nowStep"    column="now_step"    />
        <result property="applyState"    column="apply_state"    />
        <result property="studentName"    column="student_name"    />
        <result property="arearName"    column="arrear_name"    />
        <result property="arearCost"    column="arrear_cost"    />
        <result property="arearAttn"    column="arrear_attn"    />
        <result property="school"    column="school"    />
        <result property="grade"    column="grade"    />
        <collection property="verifyHistories" ofType="VerifyHistory">
            <id property="verifyId"    column="verify_id"    />
            <result property="applyId" column="apply_id"/>
            <result property="applyType"    column="apply_type"    />
            <result property="verifyPersonId"    column="verify_person_id"    />
            <result property="verifyAction"    column="verify_action"    />
            <result property="verifyUnit"    column="verify_unit"    />
            <result property="verifyAdvice"    column="verify_advice"    />
            <result property="isDeleted"    column="is_deleted"    />
            <result property="verifyPersonName"    column="verify_name"    />
        </collection>
    </resultMap>


    <select id="selectArearVerifyList" parameterType="com.gcs.verify.domain.ArearVerify" resultMap="ArearVerify">
        select table_id, aa.user_id, batch_id, arrear_id, arrear_amount, arrear_reason, now_step, apply_state, user_name student_name,
        sd1.dept_name grade, sd2.dept_name school, arrear_name, arrear_cost
        from arrear_apply aa
        left outer join arrear_info ai on aa.arrear_id = ai.id
        left outer join sys_user su on aa.user_id = su.user_id
        left outer join user_info ui on su.user_id = ui.user_id
        left outer join sys_dept sd1 on su.dept_id = sd1.dept_id
        left outer join sys_dept sd2 on sd1.parent_id = sd2.dept_id
        <where>
            <if test="tableId != null">
                and table_id = #{tableId}
            </if>
            <if test="studentId != null">
                and aa.user_id = #{studentId}
            </if>
            <if test="grade != null">
                and sd1.dept_name = #{grade}
            </if>
            <if test="school != null">
                and sd2.dept_name like '%${school}%'
            </if>
        </where>
    </select>


    <select id="selectArearVerifyByApplyId" parameterType="long" resultMap="ArearVerify">
        select table_id, aa.user_id, batch_id, arrear_id, arrear_amount, arrear_reason, now_step, apply_state, su.user_name student_name,
        sd1.dept_name grade, sd2.dept_name school, arrear_name, arrear_cost, arrear_attn,
        apply_id, verify_id, apply_type, verify_person_id, verify_action, verify_advice, su2.user_name verify_name, verify_unit
        from arrear_apply aa
        left outer join arrear_info ai on aa.arrear_id = ai.id
        left outer join sys_user su on aa.user_id = su.user_id
        left outer join user_info ui on su.user_id = ui.user_id
        left outer join sys_dept sd1 on su.dept_id = sd1.dept_id
        left outer join sys_dept sd2 on sd1.parent_id = sd2.dept_id
        left outer join verify_history vh on (vh.apply_type=0 and aa.table_id = vh.apply_id )
        left outer join sys_user su2 on vh.verify_person_id = su2.user_id
        <where>
            aa.table_id = #{applyId}
        </where>
    </select>

    <update id="setApplyState">
        update arrear_apply
        set now_step = #{nextStage}, apply_state = #{nextState}
        where table_id = #{applyId}
    </update>

    <update id="modifyArearApply" parameterType="ArearVerify">
        update arrear_apply
        <trim prefix="SET" suffixOverrides=",">
            <if test="arearAmount != null">arrear_amount = #{arearAmount},</if>
            <if test="nowStep != null">now_step = #{nowStep},</if>
            <if test="applyState != null">apply_state = #{applyState},</if>
        </trim>
        where table_id = #{tableId}
    </update>


</mapper>