<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gcs.apply.mapper.PackInfoMapper">
    
    <resultMap type="PackInfo" id="PackInfoResult">
        <result property="packId"    column="pack_id"    />
        <result property="batchId"    column="batch_id"    />
        <result property="deptId"    column="dept_id"    />
        <result property="isDeleted"    column="is_deleted"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <resultMap id="PackInfoPackGiftResult" type="PackInfo" extends="PackInfoResult">
        <collection property="packGiftList" notNullColumn="sub_id" javaType="java.util.List" resultMap="PackGiftResult" />
    </resultMap>

    <resultMap type="PackGift" id="PackGiftResult">
        <result property="id"    column="sub_id"    />
        <result property="giftId"    column="sub_gift_id"    />
        <result property="packId"    column="sub_pack_id"    />
        <result property="giftNum"    column="sub_gift_num"    />
    </resultMap>

    <sql id="selectPackInfoVo">
        select pack_id, batch_id, dept_id, is_deleted, create_time, update_time from pack_info
    </sql>

    <select id="selectPackInfoList" parameterType="PackInfo" resultMap="PackInfoResult">
        <include refid="selectPackInfoVo"/>
        <where>  
            <if test="packId != null "> and pack_id = #{packId}</if>
            <if test="batchId != null "> and batch_id = #{batchId}</if>
            <if test="deptId != null "> and dept_id = #{deptId}</if>
        </where>
    </select>
    
    <select id="selectPackInfoByPackId" parameterType="Long" resultMap="PackInfoPackGiftResult">
        select a.pack_id, a.batch_id, a.dept_id, a.is_deleted, a.create_time, a.update_time,
 b.id as sub_id, b.gift_id as sub_gift_id, b.pack_id as sub_pack_id, b.gift_num as sub_gift_num
        from pack_info a
        left join pack_gift b on b.pack_id = a.pack_id
        where a.pack_id = #{packId}
    </select>
        
    <insert id="insertPackInfo" parameterType="PackInfo" useGeneratedKeys="true" keyProperty="packId">
        insert into pack_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="batchId != null">batch_id,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="isDeleted != null">is_deleted,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="batchId != null">#{batchId},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="isDeleted != null">#{isDeleted},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatePackInfo" parameterType="PackInfo">
        update pack_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="batchId != null">batch_id = #{batchId},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="isDeleted != null">is_deleted = #{isDeleted},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where pack_id = #{packId}
    </update>

    <delete id="deletePackInfoByPackId" parameterType="Long">
        delete from pack_info where pack_id = #{packId}
    </delete>

    <delete id="deletePackInfoByPackIds" parameterType="String">
        delete from pack_info where pack_id in 
        <foreach item="packId" collection="array" open="(" separator="," close=")">
            #{packId}
        </foreach>
    </delete>
    
    <delete id="deletePackGiftByPackIds" parameterType="String">
        delete from pack_gift where pack_id in 
        <foreach item="packId" collection="array" open="(" separator="," close=")">
            #{packId}
        </foreach>
    </delete>

    <delete id="deletePackGiftByPackId" parameterType="Long">
        delete from pack_gift where pack_id = #{packId}
    </delete>

    <insert id="batchPackGift">
        insert into pack_gift( id, gift_id, pack_id, gift_num) values
		<foreach item="item" index="index" collection="list" separator=",">
            ( #{item.id}, #{item.giftId}, #{item.packId}, #{item.giftNum})
        </foreach>
    </insert>
</mapper>